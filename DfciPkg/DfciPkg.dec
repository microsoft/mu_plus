## @file
# DfciPkg.dec
#
# This Package provides all definitions(including functions, MACROs, structures
# and library classes) # and libraries instances, which are defined and created
# by the DFCI Package.
#
# Copyright (c) 2018, Microsoft Corporation
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
##

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = DfciPkg
  PACKAGE_GUID                   = a9e44171-b829-4344-8c54-45d2ad784b49
  PACKAGE_VERSION                = 1.00

[Includes]
  Include

[LibraryClasses]
  ##  @libraryclass  Library to used to optain platform device
  ##                 information (serial number, UUID etc)
  ##
  DfciDeviceIdSupportLib|Include/Library/DfciDeviceIdSupportLib.h

  ##  @libraryclass  Library for querying, setting, and verifying user passwords.
  ##
  DfciPasswordLib|Include/Library/DfciPasswordLib.h

  ##  @libraryclass  Library contains crypto support functions for the DFCI recovery feature.
  ##
  DfciRecoveryLib|Include/Library/DfciRecoveryLib.h

  ##  @libraryclass  Library supports Permissions for Settings based on Identity.
  ##
  DfciSettingPermissionLib|Include/Library/DfciSettingPermissionLib.h

  ##  @libraryclass  Library  provides a method for DXE drivers to access Dfci Settings.
  ##
  DfciSettingsLib|Include/Library/DfciSettingsLib.h

  ##  @libraryclass  Library  supports UI components associated with DFCI.
  ##
  DfciUiSupportLib|Include/Library/DfciUiSupportLib.h

  ##  @libraryclass  Library contains translation from V1 setting ID's to V2 Setting Strings.
  ##
  DfciV1SupportLib|Include/Library/DfciV1SupportLib.h

  ##  @libraryclass  Library supports the SettingPermission Lib and the Permission XML schema
  ##
  DfciXmlPermissionSchemaSupportLib|Include/Library/DfciXmlPermissionSchemaSupportLib.h

  ##  @libraryclass  Library supports the SettingsManager XML schema
  ##
  DfciXmlSettingSchemaSupportLib|Include/Library/DfciXmlSettingSchemaSupportLib.h

  ##  @libraryclass  Library supports the Device Id XML schema
  ##
  DfciXmlDeviceIdSchemaSupportLib|Include/Library/DfciXmlDeviceIdSchemaSupportLib.h

  ##  @libraryclass  Library supports the Device Id XML schema
  ##
  DfciXmlIdentitySchemaSupportLib|Include/Library/DfciXmlIdentitySchemaSupportLib.h

[Protocols]
  ## DFCI Setting Permission Protocol
  # {83FB5B14-8FBA-4D55-9578-A5314F3633A5}
  gDfciSettingPermissionsProtocolGuid = { 0x83fb5b14, 0x8fba, 0x4d55, { 0x95, 0x78, 0xa5, 0x31, 0x4f, 0x36, 0x33, 0xa5 } }

  ## DFCI Setting Access Protocol
  # {7B9CC1A0-218D-4C1C-9FCF-99F3A34D35F8}
  gDfciSettingAccessProtocolGuid = {0x7b9cc1a0, 0x218d, 0x4c1c, { 0x9f, 0xcf, 0x99, 0xf3, 0xa3, 0x4d, 0x35, 0xf8 } }

  ##  DFCI Authentication and Identity Protocol
  #
  gDfciAuthenticationProtocolGuid = { 0x8b3638f0, 0x6aa7, 0x4443, { 0x8b, 0x8b, 0xd3, 0xef, 0x32, 0x44, 0x42, 0xec }}

  ## DFCI Settings Provider Support
  #
  gDfciSettingsProviderSupportProtocolGuid = { 0xc16c7ed8, 0x3751, 0x45a5, {0xa8, 0x93, 0x29, 0x6a, 0x3, 0xb8, 0x8f, 0x9d } }

  ## DFCI Apply Permission Protocol
  # {d701b10f-9e95-4d6d-9685-b8a910cfbf3f}
  gDfciApplyPermissionsProtocolGuid = { 0xd701b10f, 0x9e95, 0x4d6d, {0x96, 0x85, 0xb8, 0xa9, 0x10, 0xcf, 0xbf, 0x3f} }

  ## DFCI Apply Settings Protocol
  # {91b3bf34-6db1-4e3c-808f-bb615b3aaf08}
  gDfciApplySettingsProtocolGuid = { 0x91b3bf34, 0x6db1, 0x4e3c, {0x80, 0x8f, 0xbb, 0x61, 0x5b, 0x3a, 0xaf, 0x08} }

  ## DFCI Apply Identity Protocol
  # {74f90a71-cfea-4842-8a45-f79823459d4a}
  gDfciApplyIdentityProtocolGuid = { 0x74f90a71, 0xcfea, 0x4842, {0x8a, 0x45, 0xf7, 0x98, 0x23, 0x45, 0x9d, 0x4a} }

[Guids]
  ## DFCI Package token space guid
  #  Include/Guid/DfciPkgTokenSpace.h
  #  {3E8B05F6-DD48-413C-87B9-057E6A0C0F93}
  gDfciPkgTokenSpaceGuid = { 0x3e8b05f6, 0xdd48, 0x413c, { 0x87, 0xb9, 0x5, 0x7e, 0x6a, 0xc, 0xf, 0x93 }}

  ## GUID for DFCI Settings Manager communication variables
  #  {D41C8C24-3F5E-4EF4-8FDD-073E1866CD01}
  #  Include/Guid/DfciSettingsManagerVariable.h
  gDfciSettingsManagerVarNamespace    = { 0xD41C8C24, 0x3F5E, 0x4EF4, { 0x8F, 0xDD, 0x07, 0x3E, 0x18, 0x66, 0xCD, 0x01 }}

  ## GUID for DFCI Identity and Authentication Manager provision variables
  #  {DE6A8726-05DF-43CE-B600-92BD5D286CFD}
  #  Include/Guid/DfciIdentityAndAuthManagerVariables.h
  gDfciAuthProvisionVarNamespace      = { 0xDE6A8726, 0x05DF, 0x43CE, { 0xB6, 0x00, 0x92, 0xBD, 0x5D, 0x28, 0x6C, 0xFD }}

  ## GUID for DFCI Permission Manager (Setting Policy)
  #
  # Include/Guid/DfciPermissionManagerVariables.h
  gDfciPermissionManagerVarNamespace  = { 0x3a9777ea, 0xd9f, 0x4b65, { 0x9e, 0xf3, 0x7c, 0xaa, 0x7c, 0x41, 0x99, 0x4b}}

  ## DFCI Private/Internal Variable Guid
  # This is needed so that VarCheckLib can do advanced locking for these variables
  #
  # Include/Guid/DfciInternalVariableGuid.h
  gDfciInternalVariableGuid = { 0xc6bbd941, 0xbfe0, 0x44b8, { 0xbe, 0xdc, 0x4, 0xd3, 0xa7, 0xe9, 0xa, 0xd9}}

  ## DFCI notification that Bds is starting (main DXE dispatch cycle complete)
  #  Still within PlatformAuth
  gDfciStartOfBdsNotifyGuid = { 0xc9341466, 0x1a6c, 0x4ded, { 0x89, 0xc2, 0x78, 0x12, 0xb0, 0x29, 0x9c, 0x45}}

  ## Guid to use for DFCI Variables
  #
  # {17FEA8D4-51EE-49B0-8460-11AD2FCA9D4F}
  gDfciNVRAMVariableGuid = { 0x17fea8d4, 0x51ee, 0x49b0, { 0x84, 0x60, 0x11, 0xad, 0x2f, 0xca, 0x9d, 0x4f }}

  ## Guid to use for DFCI Spinner Start event
  #
  # {a56178b0-57a3-42d4-ac05-f2ebb588b876}
  gDfciConfigStartEventGroupGuid = { 0xa56178b0, 0x57a3, 0x42d4, { 0xac, 0x05, 0xf2, 0xeb, 0xb5, 0x88, 0xb8, 0x76 }}

  ## Guid to use for DFCI Spinner Stop event
  #
  # {bca42a0c-0a80-4d51-a2ee-430bec2230dd}
  gDfciConfigCompleteEventGroupGuid = { 0xbca42a0c, 0x0a80, 0x4d51, { 0xa2, 0xee, 0x43, 0x0b, 0xec, 0x22, 0x30, 0xdd }}

  ## DFCI Menu Formset Guid
  #
  # Include/Guid/DfciMenuGuid.h
  gDfciMenuFormsetGuid = {0x3b82283d, 0x7add, 0x4c6a, {0xad, 0x2b, 0x71, 0x9b, 0x8d, 0x7b, 0x77, 0xc9 }}

  ## DFCI Recovery Formset Guid
  #
  ## Include/Guid/DfciMenuGuid.h
  gDfciRecoveryFormsetGuid = {0xcf9873b2, 0xce63, 0x4f63, {0x9a, 0x5f, 0x16, 0x54, 0xe4, 0x01, 0x61, 0xc6 }}

  ## DFCI Settings GUID
  # Include/Guid/DfciSettingsGuid
  gDfciSettingsGuid = { 0x9548f732, 0xd482, 0x4a39, { 0x8b, 0x27, 0xcd, 0x99, 0x18, 0x11, 0xba, 0x6a }}

  ## DFCI Device ID Variable GUID
  # Include/Guid/DfciDeviceIdVariable.h
  gDfciDeviceIdVarNamespace = { 0x4123a1a9, 0x6f50, 0x4b58, { 0x9c, 0x3d, 0x56, 0xfc, 0x24, 0xc6, 0xc8, 0x9e }}


[PcdsFeatureFlag]
  ## Our Setting design pattern creates a single library for setting access (get/set)
  # and install setting provider.  But we only want to install 1 setting provider per setting
  # and therefore using this PCD only a driver that overrides to TRUE will do the install of the provider.
  #
  gDfciPkgTokenSpaceGuid.PcdSettingsManagerInstallProvider|FALSE|BOOLEAN|0x40000014

  ## Dfci Enabled
  # When DFCI is disabled, it means three things:
  #    1. The DfciIdentifier is not published, telling any management service that DFCI is not supported
  #    2. The SEMM menu is available when SEMM is actively owned.  The DFCI menu will not display.
  #    3. The Zero Touch Certificate is not included in the ROM
  gDfciPkgTokenSpaceGuid.PcdDfciEnabled|TRUE|BOOLEAN|0x40000015

[PcdsFixedAtBuild]
  ## FFS filename to find the DFCI Timer BMP file,
  # {717f2543-3bb6-4f9d-a6fc-58e8a78dbd27}
  gDfciPkgTokenSpaceGuid.PcdDfciTimerFile |{ 0x43, 0x25, 0x7f, 0x71, 0xb6, 0x3b, 0x4f, 0x9d, 0xa6, 0xfc, 0x58, 0xe8, 0xa7, 0x8d, 0xbd, 0x27 }|VOID*|0x4000000C

[PcdsDynamic, PcdsDynamicEx]
  ## Setup UI is running in reduced functionality mode (ie password skipped)
  #  Used to limit OPT IN and OPT OUT to when full setup is capable.
    gDfciPkgTokenSpaceGuid.PcdSetupUiReducedFunction|FALSE|BOOLEAN|0x40000016