## @file  MsGraphicsPkg.dec
# This Package provides all definitions, library classes and libraries instances for MsGraphics.
# MsGraphics is common code used in the Microsoft UEFI Core code base
#
# Copyright (C) Microsoft Corporation. All rights reserved.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = MsGraphicsPkg
  PACKAGE_UNI_FILE               = MsGraphicsPkg.uni
  PACKAGE_GUID                   = 4034F365-208B-43E3-8C05-442772E215B5
  PACKAGE_VERSION                = 0.20

[Includes]
  Include

[LibraryClasses]
  MsUiThemeCopyLib|Include/Library/MsUiThemeCopyLib.h
  MsUiThemeLib|Include/Library/MsUiThemeLib.h
  #UIToolKitLib|Include/UIToolKit/SimpleUIToolKit.h  # temporarily disabled due to bug in pytools library parsing
  MsPlatformEarlyGraphicsLib|Include/Library/MsPlatformEarlyGraphicsLib.h
  UiProgressCircleLib|Include/Library/UiProgressCircleLib.h
  UiRectangleLib|Include/Library/UiRectangleLib.h
  PlatformThemeLib|Include/Library/PlatformThemeLib.h
  DisplayDeviceStateLib|Include/Library/DisplayDeviceStateLib.h
  MsColorTableLib|Include/Library/MsColorTableLib.h
  BootGraphicsProviderLib|Include/Library/BootGraphicsProviderLib.h
  QrEncoderLib|Include/Library/QrEncoderLib.h
  BootGraphicsLib|Include/Library/BootGraphicsLib.h
  SwmDialogsLib|Include/Library/SwmDialogsLib.h

[Guids]
  ## Microsoft Core Package token space guid
  #  Include/Guid/MsCorePkgTokenSpace.h
  #  {89D2DAE8-FB96-4E83-9860-5CDF279DF3C1}
  gMsGraphicsPkgTokenSpaceGuid = { 0x89d2dae8, 0xfb96, 0x4e83, { 0x98, 0x60, 0x5c, 0xdf, 0x27, 0x9d, 0xf3, 0xc1 } }

  ## Guid for touch Panel. Guid Value will be the same as gEfiTouchPanelGuid so Me could use it in the SiliconPkg
  #
  #
  gMsTouchPanelGuid  =  {0x91b1d27b, 0xe126, 0x48d1, {0x82, 0x34, 0xd2, 0x8b, 0x81, 0xc8, 0x83, 0x62}}

  ## Microsoft On Screen Keyboard Device Path GUID
  #
  gOSKDevicePathGuid = {0xad603516, 0xd94a, 0x425e, {0x9b, 0x42, 0x0b, 0x55, 0xfd, 0xdb, 0xd8, 0xa1}}

  ## Microsoft Boot Manager Settings GUID
  #
  gMsUiThemeHobGuid = {  0xb07c8481, 0xb02f, 0x44ca, {0xa9, 0x09, 0x64, 0xf8, 0xcd, 0x47, 0x0b, 0x6f }}

  # {B24FD789-0ADF-46B6-B385-7003E83654D2}
  gMsEventMasterFrameNotifyGroupGuid    = { 0xb24fd789, 0xadf, 0x46b6, { 0xb3, 0x85, 0x70, 0x3, 0xe8, 0x36, 0x54, 0xd2 } }

  # Early Graphics HOG
  gMsEarlyGraphicsHobGuid           = { 0x3dfb90f2, 0x9e22, 0x4ae6, { 0xb8, 0xdf, 0x79, 0x35, 0x30, 0xb5, 0xdc, 0x25 }}

  ## Used for signalling boot graphics has been displayed
  gLogoDisplayedEventGroup  = { 0x3C4F1430, 0x56D3, 0x45B6, { 0x8A, 0x1D, 0xB3, 0xE0, 0x0D, 0xEB,0xD8, 0xAF }}

  # Guids for the the four General Purpose Timeout Events
  #
  # Start General 1 (Used by DFCI)         {a56178b0-57a3-42d4-ac05-f2ebb588b876}
  gGeneralSpinner1StartEventGroupGuid    = {0xa56178b0, 0x57a3, 0x42d4, { 0xac, 0x05, 0xf2, 0xeb, 0xb5, 0x88, 0xb8, 0x76}}

  # Stop General 1 (Used by DFCI)          {bca42a0c-0a80-4d51-a2ee-430bec2230dd}
  gGeneralSpinner1CompleteEventGroupGuid = {0xbca42a0c, 0x0a80, 0x4d51, { 0xa2, 0xee, 0x43, 0x0b, 0xec, 0x22, 0x30, 0xdd}}

  # Start General 2                        {095be340-cfab-4dc8-8453-834147e51e54}
  gGeneralSpinner2StartEventGroupGuid    = {0x095be340, 0xcfab, 0x4dc8, {0x84, 0x53, 0x83, 0x41, 0x47, 0xe5, 0x1e, 0x54}}

  # Stop General 2                         {be5a9684-4f07-4886-b55f-99c33b5ec43e}
  gGeneralSpinner2CompleteEventGroupGuid = {0xbe5a9684, 0x4f07, 0x4886, {0xb5, 0x5f, 0x99, 0xc3, 0x3b, 0x5e, 0xc4, 0x3e}}

  # Start General 3                        {6928e1fb-d88f-4647-8981-09446dd7f416}
  gGeneralSpinner3StartEventGroupGuid    = {0x6928e1fb, 0xd88f, 0x4647, {0x89, 0x81, 0x09, 0x44, 0x6d, 0xd7, 0xf4, 0x16}}

  # Stop General 3                         {dac7f0e5-a5f7-4eb3-91d6-848c785b8c46}
  gGeneralSpinner3CompleteEventGroupGuid = {0xdac7f0e5, 0xa5f7, 0x4eb3, {0x91, 0xd6, 0x84, 0x8c, 0x78, 0x5b, 0x8c, 0x46}}

  # Start General 4                        {aab017be-0aca-4bb0-a2fc-b671c1abe072}
  gGeneralSpinner4StartEventGroupGuid    = {0xaab017be, 0x0aca, 0x4bb0, {0xa2, 0xfc, 0xb6, 0x71, 0xc1, 0xab, 0xe0, 0x72}}

  # Stop General 4                         {459a7f69-22c7-4e06-b058-5db3560d3bf3}
  gGeneralSpinner4CompleteEventGroupGuid = {0x459a7f69, 0x22c7, 0x4e06, {0xb0, 0x58, 0x5d, 0xb3, 0x56, 0x0d, 0x3b, 0xf3}}

  ## GUID to identify the Nvidia GOP
  #  {39C6B7CC-8847-4DA9-9B22-1BCC34A1A06B}
  #
  gNvidiaGop = {0x39C6B7CC, 0x8847, 0x4DA9, { 0x9B, 0x22, 0x1B, 0xCC, 0x34, 0xA1, 0xA0, 0x6B}}

[Ppis]
  ## <Path to the header file>
  #<global guid name>  = <GUID VALUE>

  # Include/Protocol/MsUiThemeProtocol.h ## Yes, Protocol, not Ppi
  gMsUiThemePpiGuid = { 0x74367a5b, 0x27fb, 0x45e2, {0xa5, 0x92, 0x01, 0x7b, 0x63, 0x03, 0x9d, 0x51 }}

[Protocols]
  ## On-Screen Keyboard protocol guid
  #
  gMsOSKProtocolGuid = { 0x3c4ca20d, 0xc95a, 0x4b8b, { 0x81, 0xaf, 0x94, 0xa9, 0x83, 0x09, 0x23, 0xe2 }}

  ## Simple Window Manager protocol guid
  #
  gMsSWMProtocolGuid = { 0x9d400d20, 0x6f35, 0x4268, { 0x90, 0x4f, 0xdc, 0x04, 0xb1, 0x87, 0x7b, 0x62 }}

  ## Simple Rendering Engine protocol guid
  #
  gMsSREProtocolGuid = { 0x7768969c, 0x1d94, 0x4d19, { 0xb0, 0xcf, 0x9f, 0x66, 0xcc, 0x59, 0x34, 0xb4 }}

  ## Microsoft UiTheme protocol guid
  #
  gMsUiThemeProtocolGuid = { 0xfc111ae5, 0xf073, 0x4348, { 0xaa, 0x5c, 0x49, 0x12, 0x4b, 0xbf, 0xed, 0x7b }}

  ## Microsoft Early Dxe Graphics protocol
  #
  gMsEarlyGraphicsProtocolGuid = {  0xe357ab3b, 0x5a12, 0x4f57, { 0x8e, 0x08, 0x6d, 0xc8, 0x1a, 0x1a, 0x70, 0x55 }}

[PcdsFeatureFlag]

[PcdsFixedAtBuild]
  ## PcdMsGopOverrideProtocolGuid
  #  BE8EE323-184C-4E24-8E18-2E6DADD70160
  gMsGraphicsPkgTokenSpaceGuid.PcdMsGopOverrideProtocolGuid|{0x23, 0xE3, 0x8E, 0xBE, 0x4C, 0x18, 0x24, 0x4E, 0x8E, 0x18, 0x2E, 0x6D, 0xAD, 0xD7, 0x01, 0x60}|VOID*|0x4000012f

  ## This fixed at build flag defines whether the MsUiTheme is built into the PPI or the DXE
  #  If this PCD is set to TRUE then the Ui Theme data is not installed in the PPI and
  #  no theme guid hob is inserted into the HOB list.  This is for system that do not use PPI
  gMsGraphicsPkgTokenSpaceGuid.PcdUiThemeInDxe|FALSE|BOOLEAN|0x40000015

[PcdsFixedAtBuild, PcdsPatchableInModule]
  ## Power Off Delay and Hold time.  Delay is how long to wait before prompting the user, and
  #  hold is how long to display the power down dialog before shutting down
  gMsGraphicsPkgTokenSpaceGuid.PcdPowerOffDelay|300|UINT32|0x4000012A                  # Default is 5 * 60 Seconds (5 minutes)
  gMsGraphicsPkgTokenSpaceGuid.PcdPowerOffHold|30|UINT16|0x4000012B                    # Default is 30 seconds
  gMsGraphicsPkgTokenSpaceGuid.PcdSmallAssetMaxScreenWidth|1280|UINT32|0x4000012C      # Default is 1280 pixels

  gMsGraphicsPkgTokenSpaceGuid.PcdNVMeTimerFile |{ 0x2e, 0x8e, 0x9d, 0xe4, 0x06, 0xa7, 0x54, 0x4a, 0x49, 0xb6, 0x8d, 0x42, 0x3b, 0x39, 0x74, 0x61 }|VOID*|0x4000011a

  ## This fixed at build flag enables typematic keys on the On Screen Keyboard
  #
  gMsGraphicsPkgTokenSpaceGuid.PcdEnableTypematicOSK|TRUE|BOOLEAN|0x40000016

[PcdsDynamicEx]
  gMsGraphicsPkgTokenSpaceGuid.PcdCurrentPointerState|0x00000000|UINT64|0x40000009

  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral1File |{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }|VOID*|0x40000129
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral2File |{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }|VOID*|0x40000128
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral3File |{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }|VOID*|0x40000127
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral4File |{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }|VOID*|0x40000126

  # Initialize to the same UUID at PcdNVMETimerFile.  This will specify which bitmap to use at runtime.
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral5File |{ 0x2e, 0x8e, 0x9d, 0xe4, 0x06, 0xa7, 0x54, 0x4a, 0x49, 0xb6, 0x8d, 0x42, 0x3b, 0x39, 0x74, 0x61 }|VOID*|0x40000125

  # Spinner Locations.  Currently, only the 4 corners and the center of the display are supported
  # 1 = Lower Right
  # 2 = Lower Left
  # 3 = Upper Right
  # 4 = Upper Left
  # 5 = Center of display
  #
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral1Location|5|UINT8|0x40000124
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral2Location|5|UINT8|0x40000123
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral3Location|5|UINT8|0x40000122
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral4Location|5|UINT8|0x40000121
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral5Location|1|UINT8|0x40000120

  # Spinner Type.  Currently, there are only standard and delay.  Standard displays immediately, and delay starts after 5 seconds
  # 1 = Standard
  # 2 = Delay
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral1Type|1|UINT8|0x4000011f
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral2Type|1|UINT8|0x4000011e
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral3Type|1|UINT8|0x4000011d
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral4Type|1|UINT8|0x4000011c
  gMsGraphicsPkgTokenSpaceGuid.PcdGeneral5Type|2|UINT8|0x4000011b

  ##
  # POST background coloring skip counter's initial/default value.
  # Background is colored in DXE only when this counter reaches 0
  # Default is 1, meaning background will not be colored on first invocation of Logo rendering library in DXE
  #
  gMsGraphicsPkgTokenSpaceGuid.PcdPostBackgroundColoringSkipCount|0x01|UINT8|0x40000187

[UserExtensions.TianoCore."ExtraFiles"]
  MsGraphicsPkgExtra.uni
